{"version":3,"sources":["api/pizza-api.tsx","components/search/search.tsx","actions/index.tsx","actions/actionTypes.tsx","components/sidebar/sidebar.tsx","selectors/index.tsx","pages/home/home.tsx","hooks/hook-fetch/hookFetch.tsx","pages/basket/basket.tsx","pages/history/history.tsx","context/current-user-context/current-user-context.tsx","pages/auth/auth.tsx","routes.tsx","store/pizza-reducer/index.tsx","store/home-page/index.tsx","store/basket/index.tsx","store/reducers.tsx","store/store.tsx","components/basket-icon/basket-icon.tsx","hooks/use-auth/use-auth.tsx","components/navbar/navbar.tsx","components/layout/layout.tsx","components/current-user-cheker/current-user-cheker.tsx","App.tsx","index.tsx"],"names":["fetchPizzasApi","url","a","axios","then","res","catch","error","mapDispatchToProps","searchPizza","id","dispatch","type","payload","connect","useState","value","setValue","className","onSubmit","event","preventDefault","onChange","currentTarget","Sidebar","getPizzaById","state","R","pizzas","getPizzas","homePage","ids","filter","pizza","search","name","getPizzaJson","basket","map","dollar","euro","getTotalBasketCount","getBasketPizzasWithCount","uniqeIds","basketId","length","getTotalBasketPrice","totalPriceInDollar","totalPriceInEuro","fetchPizzas","data","console","log","addPizzaToBasket","useEffect","description","key","src","image","alt","onClick","renderPizza","HookFetch","isLoading","setIsLoading","response","setResponse","setError","options","setOptions","setUrl","doFetch","useCallback","requestOptions","headers","authorization","localStorage","getItem","msg","message","makeReq","clearError","removePizzaFromBasket","clearBasket","pizzasJson","totalBusketPrice","setName","address","setAddress","useFetch","index","count","jsonData","totalPriceDollar","totalPriceEuro","method","placeholder","required","e","target","disabled","History","scope","order","CurrentUserContext","createContext","CurrentUserProvider","children","isLoggedIn","currentUser","setState","Provider","Auth","email","setEmail","password","setPassword","isLogin","useLocation","pathname","pageTitle","descriptionLink","descriptionText","apiUrl","useContext","setCurrentUserState","history","useHistory","setItem","user","token","push","to","Routes","currentUserContext","path","exact","initialState","initialStte","combineReducers","idp","nv","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","totalBusketCount","aria-hidden","UseAuth","ready","setReady","isAuth","setIsAuth","logout","removeItem","NavBar","currentUserState","Layout","useAuth","role","CurrentUserChecker","App","store","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8105dfbe.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const fetchPizzasApi = async (url: string) => {\r\n    return await axios(url)\r\n    .then(res => res)\r\n    .catch(error => error);\r\n}\r\n\r\nexport default fetchPizzasApi;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    searchPizza\r\n} from '../../actions'\r\n\r\nconst Search = ({searchPizza}: any) => {\r\n    const [value, setValue] = useState<string>('');\r\n\r\n    const handleSubmit = (event: React.FormEvent) => {\r\n        event.preventDefault();\r\n        searchPizza(value);\r\n    }\r\n\r\n    const handleChange = (event: React.FormEvent<HTMLInputElement>) =>{\r\n        setValue(event.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-block\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-12\">\r\n                        <input type=\"text\" className=\"form-control\" onChange={handleChange} value={value}/>\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn btn-primary\">\r\n                    поиск\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    searchPizza\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Search);","import {\r\n    FETCH_PIZZAS_FAILUER,\r\n    FETCH_PIZZAS_START,\r\n    FETCH_PIZZAS_SUCCESS,\r\n    ADD_PIZZA_TO_BASKET,\r\n    SEARCH_PIZZA,\r\n    REMOVE_PIZZA_FROM_BASKET,\r\n    CLEAR_BASKET\r\n} from './actionTypes'\r\n\r\nimport { fetchPizzasApi } from '../api/pizza-api';\r\n\r\nexport const addPizzaToBasket = (id: number) => (dispatch: any) => {\r\n    dispatch({type: ADD_PIZZA_TO_BASKET, payload: id});\r\n}\r\n\r\nexport const searchPizza = (id: number) => (dispatch: any) => {\r\n    dispatch({type: SEARCH_PIZZA, payload: id});\r\n}\r\n\r\nexport const clearBasket = (id: number) => (dispatch: any) => {\r\n    dispatch({type: CLEAR_BASKET });\r\n}\r\n\r\nexport const removePizzaFromBasket = (id: number) => (dispatch: any) => {\r\n    dispatch({type: REMOVE_PIZZA_FROM_BASKET, payload: id});\r\n}\r\n\r\nexport const fetchPizzas = () => async (dispatch: any) => {\r\n    dispatch({type: FETCH_PIZZAS_START});\r\n\r\n    try {\r\n        const pizzas = await fetchPizzasApi('/api/pizza');\r\n\r\n        dispatch({\r\n            type: FETCH_PIZZAS_SUCCESS,\r\n            payload: pizzas.data\r\n        })\r\n    } catch(err) {\r\n        console.log('err', err)\r\n        dispatch({\r\n                type: FETCH_PIZZAS_FAILUER,\r\n                payload: err,\r\n                error: true\r\n            });\r\n    }\r\n\r\n}","export const FETCH_PIZZAS_START = 'FETCH_PIZZAS_START';\r\nexport const FETCH_PIZZAS_SUCCESS = 'FETCH_PIZZAS_SUCCESS';\r\nexport const FETCH_PIZZAS_FAILUER = 'FETCH_PIZZAS_FAILUER';\r\n\r\nexport const ADD_PIZZA_TO_BASKET = 'ADD_PIZZA_TO_BASKET';\r\n\r\nexport const SEARCH_PIZZA = 'SEARCH_PIZZA';\r\n\r\nexport const REMOVE_PIZZA_FROM_BASKET = 'REMOVE_PIZZA_FROM_BASKET';\r\n\r\nexport const CLEAR_BASKET = 'CLEAR_BASKET';","import React from 'react';\r\nimport Search from '../search'\r\n\r\nconst Sidebar = () => {\r\n    return(\r\n        <div className=\"sidebar\">\r\n            <Search />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import * as R from 'ramda';\r\n\r\nconst getPizzaById = (state: any, id: number) => R.prop(id, state.pizzas)\r\n\r\nexport const getPizzas = (state: any) => R.map(id => getPizzaById(state, id), state.homePage.ids).filter((pizza: any) => R.contains(state.homePage.search, pizza.name));\r\n\r\nexport const getPizzaJson = (state: any) => \r\n    state.basket.map((id: number) => {\r\n        const pizza = getPizzaById(state, id)\r\n        return {\r\n            dollar: pizza.dollar,\r\n            euro: pizza.euro,\r\n            name: pizza.name\r\n        };\r\n    })\r\n\r\nexport const getTotalBasketCount = (state: any) => R.length(state.basket)\r\n\r\nexport const getBasketPizzasWithCount = (state: any) => {\r\n    const uniqeIds = R.uniq(state.basket);\r\n    const pizzaCount = (id: any) => state.basket.filter((basketId: any) => basketId === id).length\r\n\r\n    const pizzaWithCount = (pizza: any) => R.assoc('count', pizzaCount(pizza.id), pizza)\r\n\r\n    const pizzas = R.compose(\r\n        R.map(pizzaWithCount),\r\n        R.map((id: any) => getPizzaById(state, id))\r\n    )(uniqeIds)\r\n\r\n    return pizzas;\r\n}\r\n\r\nexport const getTotalBasketPrice = (state: any) => {\r\n    const totalPriceInDollar = R.compose(\r\n        R.sum,\r\n        R.pluck('dollar'),\r\n        R.map((id: number) => getPizzaById(state, id))\r\n    )(state.basket)\r\n    const totalPriceInEuro = R.compose(\r\n        R.sum,\r\n        R.pluck('euro'),\r\n        R.map((id: number) => getPizzaById(state, id))\r\n    )(state.basket)\r\n\r\n    return { totalPriceInDollar, totalPriceInEuro }\r\n}","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Sidebar from '../../components/sidebar'\r\nimport { fetchPizzas, addPizzaToBasket } from '../../actions';\r\nimport { getPizzas } from '../../selectors';\r\nimport * as R from 'ramda';\r\nimport './home.css';\r\n\r\nconst Home = ({ pizzas, fetchPizzas, addPizzaToBasket }: any) => {\r\n\r\n    useEffect(() => {\r\n        const getPizzas = async () => {\r\n            await fetchPizzas();\r\n        }\r\n        getPizzas();\r\n    }, [fetchPizzas])\r\n\r\n    const renderPizza = (pizza: any) => {\r\n        const description = `${R.take(40, pizza.description)}...`;\r\n        return(\r\n            <div className=\"col-sm-4\" key={pizza.id}>\r\n                <div className=\"card card-pizza\" >\r\n                    <div className=\"card-pizza-image\">\r\n                        <img src={pizza.image} className=\"card-img-top\" alt=\"img\" />\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <p className=\"card-text\">{pizza.name}</p>\r\n                        <p className=\"card-text\">{description}</p>\r\n                        <p className=\"card-text\">цена: ${pizza.dollar} / €{pizza.euro}</p>\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={() => addPizzaToBasket(pizza.id)}\r\n                            >КУПИТЬ!</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"home-page\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-2\">\r\n                    <Sidebar />\r\n                </div>\r\n                <div className=\"col-sm-10\">\r\n                    <div className=\"row\">\r\n                        {pizzas.map((pizza: any) => renderPizza(pizza))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToPropsstate = (state: any) => ({\r\n    pizzas: getPizzas(state)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    fetchPizzas,\r\n    addPizzaToBasket\r\n}\r\n\r\nexport default connect(mapStateToPropsstate, mapDispatchToProps)(Home)","import { useState, useCallback, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst HookFetch = () => {\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n    const [response, setResponse] = useState<any>(null);\r\n    const [error, setError] = useState<string>(\"\");\r\n    const [options, setOptions] = useState({});\r\n    const [url, setUrl] = useState<string>(\"\");\r\n    \r\n    const doFetch = useCallback((url, options = {}) => {\r\n        setResponse(null)\r\n        setOptions(options);\r\n        setIsLoading(true);\r\n        setUrl(url);\r\n      }, []);\r\n\r\n      useEffect(() => {\r\n        if (!isLoading) return;\r\n\r\n        const requestOptions = {\r\n            ...options,\r\n            ...{\r\n                headers: {\r\n                  authorization: localStorage.getItem('token') ??  \"\"\r\n                }\r\n              }\r\n        }\r\n\r\n        const makeReq = async () => {\r\n          await axios(url, requestOptions)\r\n          .then(res => {\r\n              setIsLoading(false);\r\n              setResponse(res.data);\r\n          })\r\n          .catch(error => {\r\n              if(error && error.response) {\r\n                const msg = error.response.data.message ? error.response.data.message : error.response.data\r\n                setError(msg);\r\n                setIsLoading(false);\r\n              }\r\n          });\r\n        }\r\n\r\n        makeReq();\r\n\r\n    }, [isLoading, url, options]);\r\n\r\n    const clearError = useCallback(() => setError(''), []);\r\n\r\n    return { isLoading, response, error, doFetch, clearError };\r\n}\r\n\r\nexport default HookFetch;","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    getBasketPizzasWithCount,\r\n    getTotalBasketPrice,\r\n    getPizzaJson\r\n} from '../../selectors'\r\nimport { removePizzaFromBasket, clearBasket } from '../../actions'\r\nimport * as R from 'ramda';\r\nimport useFetch from \"../../hooks/hook-fetch\";\r\nimport './basket.css'\r\n\r\nconst Basket = ({ pizzas, totalBusketPrice, removePizzaFromBasket, pizzasJson, clearBasket }: any) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const deliveryInDollar = 4;\r\n    const deliveryInEuro = 4;\r\n    const { isLoading, response, doFetch, error } = useFetch();\r\n    \r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = {name, address, jsonData: [...pizzasJson], totalPriceDollar: totalPriceInDollar + deliveryInDollar, totalPriceEuro: totalPriceInEuro + deliveryInEuro}\r\n        setName(\"\");\r\n        setAddress(\"\");\r\n        clearBasket();\r\n\r\n        doFetch('/api/order/makeOrder', {\r\n            method: \"post\",\r\n            data\r\n        });\r\n    };\r\n\r\n    useEffect(()=> {\r\n        if (!error && response) {\r\n            setName(\"\");\r\n            setAddress(\"\");\r\n            clearBasket();\r\n        }\r\n    }, [clearBasket, setName, setAddress, error, response])\r\n\r\n\r\n    if (R.isEmpty(pizzas)) return <div className=\"basket-is-empty\">Корзина пуста</div>\r\n    const { totalPriceInDollar, totalPriceInEuro } = totalBusketPrice;\r\n    return (\r\n        <>\r\n            <div className=\"basket-table\">\r\n                <table className=\"table table-striped\">\r\n                    <tbody>\r\n                        {pizzas.map((pizzas: any, index: any) => (\r\n                            <tr\r\n                                key={index}\r\n                            >\r\n                                <td className='first-column-checkout'>\r\n                                    <img\r\n                                        className='img-thumbnail'\r\n                                        src={pizzas.image}\r\n                                        alt={pizzas.name}\r\n                                    />\r\n                                </td>\r\n                                <td>{pizzas.name}</td>\r\n                                <td>{pizzas.count}</td>\r\n                                <td>\r\n                                    <span\r\n                                        onClick={() => removePizzaFromBasket(pizzas.id)}\r\n                                        className='delete-pizza'\r\n                                    >x</span>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                        <tr>\r\n                            <td className='first-column-checkout'>\r\n                                доставка\r\n                            </td>\r\n                            <td>$4 / €3</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"text-right basket-total-price\">\r\n                    Общая цена c доставкой - ${totalPriceInDollar + deliveryInDollar} / €{totalPriceInEuro + deliveryInEuro}\r\n                </div>\r\n            </div >\r\n\r\n            <div className=\"auth-block\">\r\n                <h1 className=\"text-center\">Форма заказа</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <div className=\"input-group mb-3\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\">Имя</span>\r\n                            </div>\r\n                            <input\r\n                                placeholder=\"Имя\"\r\n                                id=\"name\"\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                required\r\n                                className=\"form-control\"\r\n                                onChange={e => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-group mb-3\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\">Адрес</span>\r\n                            </div>\r\n                            <input\r\n                                placeholder=\"Адрес\"\r\n                                id=\"adrress\"\r\n                                type=\"text\"\r\n                                required\r\n                                name=\"adrress\"\r\n                                className=\"form-control\"\r\n                                onChange={e => setAddress(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <button\r\n                            disabled={isLoading}\r\n                            className=\"btn btn-primary\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Заказать\r\n                </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    pizzasJson: getPizzaJson(state),\r\n    pizzas: getBasketPizzasWithCount(state),\r\n    totalBusketPrice: getTotalBasketPrice(state),\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    removePizzaFromBasket,\r\n    clearBasket\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Basket);","import React, { useEffect } from \"react\";\r\nimport useFetch from \"../../hooks/hook-fetch\";\r\nimport './history.css'\r\n\r\nconst History = () => {\r\n    const { isLoading, response, doFetch } = useFetch();\r\n\r\n    useEffect(() => {\r\n        doFetch('/api/order/get-orders');\r\n    }, [doFetch])\r\n\r\n    if (isLoading || !response) return <div>Loading...</div>\r\n\r\n    return (\r\n        <div className=\"auth-block\">\r\n            <h1 className=\"text-center\">История</h1>\r\n            <table className=\"table table-dark\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Имя</th>\r\n                        <th scope=\"col\">Адрес</th>\r\n                        <th scope=\"col\">Pаказ</th>\r\n                        <th scope=\"col\">Общая сумма</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {response.map((order: any, index: number) => {\r\n                        return (\r\n                            <tr key={index}>\r\n                                <th scope=\"row\">{index}</th>\r\n                                <td>{order.name}</td>\r\n                                <td>{order.address}</td>\r\n                                <td className=\"table-total-sum-td\">{order.jsonData.map((pizza: any) => {\r\n                                    return (\r\n                                        <div className=\"table-total-sum\">\r\n                                            <p>Пицца - {pizza.name}</p>\r\n                                            <p>ценна - ${pizza.dollar} / €{pizza.euro}</p>\r\n                                        </div>\r\n                                    );\r\n                                }\r\n                                )}</td>\r\n                                <td>${order.totalPriceDollar} / €{order.totalPriceEuro}</td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default History;\r\n","import React, {createContext, useState} from 'react'\r\n\r\nexport const CurrentUserContext = createContext([{}, () => {}])\r\n\r\nexport const CurrentUserProvider = ({children} : any) => {\r\n    const [state, setState] = useState({\r\n        isLoading: false,\r\n        isLoggedIn: null,\r\n        currentUser: null\r\n    })\r\n\r\n    return (\r\n        <CurrentUserContext.Provider value={[state, setState]}>\r\n            {children}\r\n        </CurrentUserContext.Provider>\r\n    )\r\n}","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\r\nimport useFetch from \"../../hooks/hook-fetch\";\r\nimport { CurrentUserContext } from '../../context/current-user-context'\r\nimport './auth.css';\r\n\r\nconst Auth = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const isLogin = useLocation().pathname === \"/login\";\r\n    const pageTitle = isLogin ? \"Войти\" : \"Регистрация\";\r\n    const descriptionLink = isLogin ? \"/registration\" : \"/login\";\r\n    const descriptionText = isLogin ? \"Зарегестрироваться?\" : \"Уже есть аккаунт?\";\r\n    const apiUrl = isLogin ? \"/api/auth/login\" : \"/api/auth/registration\";\r\n    const { isLoading, response, doFetch } = useFetch();\r\n    const [, setCurrentUserState] = useContext<any>(CurrentUserContext)\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (!response) return;\r\n\r\n        localStorage.setItem('token', response.user.token)\r\n        \r\n        setCurrentUserState((state: any) => ({\r\n            ...state,\r\n            isLoggedIn: true,\r\n            isLoading: false,\r\n            currentUser: response.user\r\n        }))\r\n\r\n        history.push(\"/\");\r\n    }, [response, setCurrentUserState, history ])\r\n\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n\r\n        const user = isLogin ? { email, password } : { email, password };\r\n\r\n        doFetch(apiUrl, {\r\n            method: \"post\",\r\n            data: user\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"auth-block\">\r\n            <h1 className=\"text-center\">{pageTitle}</h1>\r\n            <p className=\"text-center is-login\">\r\n                <Link to={descriptionLink}>{descriptionText}</Link>\r\n            </p>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <div className=\"input-group mb-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">Email</span>\r\n                        </div>\r\n                        <input\r\n                            placeholder=\"email\"\r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            className=\"form-control\"\r\n                            onChange={e => setEmail(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-group mb-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">Password</span>\r\n                        </div>\r\n                        <input\r\n                            placeholder=\"зassword\"\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            className=\"form-control\"\r\n                            onChange={e => setPassword(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <button\r\n                        disabled={isLoading}\r\n                        className=\"btn btn-primary\"\r\n                        type=\"submit\"\r\n                    >\r\n                        {pageTitle}\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import React, { useContext} from \"react\";\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Home from './pages/home';\r\nimport Basket from './pages/basket';\r\nimport History from './pages/history';\r\nimport Auth from './pages/auth';\r\nimport { CurrentUserContext } from './context/current-user-context'\r\n\r\nconst Routes: React.FC = () => {\r\n    const [currentUserContext] = useContext<any>(CurrentUserContext)\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                <Home />\r\n            </Route>\r\n            <Route path=\"/basket\">\r\n                <Basket />\r\n            </Route>\r\n            {!currentUserContext.isLoggedIn && (\r\n                <>\r\n                <Route path=\"/login\">\r\n                    <Auth />\r\n                </Route>\r\n                <Route path=\"/registration\">\r\n                    <Auth />\r\n                </Route>\r\n                </>\r\n            )}\r\n            {currentUserContext.isLoggedIn && (\r\n                <>\r\n                    <Route path=\"/history\">\r\n                        <History />\r\n                    </Route>\r\n                </>\r\n            )}\r\n            <Redirect to=\"/\" />\r\n      </Switch>\r\n    )\r\n}\r\n\r\nexport default Routes;","import {\r\n    FETCH_PIZZAS_SUCCESS\r\n} from '../../actions/actionTypes';\r\nimport * as R from 'ramda';\r\n\r\nconst initialState = {}\r\n\r\nexport default (state = initialState, {type, payload}: any) => {\r\n    switch(type) {\r\n        case FETCH_PIZZAS_SUCCESS:\r\n            const nv = R.indexBy<any>(R.prop('id'), payload);\r\n            return R.merge(state, nv);\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    FETCH_PIZZAS_SUCCESS,\r\n    SEARCH_PIZZA\r\n} from '../../actions/actionTypes';\r\nimport * as R from 'ramda';\r\n\r\nconst initialStte = {\r\n    ids: [],\r\n    search: ''\r\n}\r\n\r\nexport default (state = initialStte, { type, payload }: any) => {\r\n    switch (type) {\r\n        case FETCH_PIZZAS_SUCCESS:\r\n            const idp = R.pluck('id')\r\n            return R.merge(state, {\r\n                ids: idp(payload)\r\n            })\r\n        case SEARCH_PIZZA:\r\n            return R.merge(state, {\r\n                search: payload\r\n            })\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ADD_PIZZA_TO_BASKET,\r\n    REMOVE_PIZZA_FROM_BASKET,\r\n    CLEAR_BASKET\r\n} from '../../actions/actionTypes';\r\nimport * as R from 'ramda';\r\n\r\nconst initialState: [] = []\r\n\r\nexport default (state = initialState, { type, payload }: any) => {\r\n    switch (type) {\r\n        case ADD_PIZZA_TO_BASKET:\r\n            return R.append(payload, state);\r\n        case REMOVE_PIZZA_FROM_BASKET:\r\n            return R.without([payload], state);\r\n        case CLEAR_BASKET:\r\n            return [];\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport pizzaRudecer from './pizza-reducer';\r\nimport homePage from './home-page';\r\nimport basket from './basket';\r\n\r\nexport default combineReducers({\r\n    homePage,\r\n    basket,\r\n    pizzas: pizzaRudecer\r\n})","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducers from './reducers'\r\n\r\n\r\nexport default createStore(\r\n    reducers,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getTotalBasketCount,\r\n    getTotalBasketPrice\r\n} from '../../selectors'\r\n\r\nconst BasketIcon = ({totalBusketCount, totalBusketPrice}: any) => {\r\n    const { totalPriceInDollar, totalPriceInEuro } = totalBusketPrice;\r\n    return(\r\n        <div className=\"basket-icon\">\r\n            <i className=\"fa fa-shopping-basket\" aria-hidden=\"true\"><span>{totalBusketCount}</span></i> ${totalPriceInDollar} / €{totalPriceInEuro}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n    totalBusketCount: getTotalBasketCount(state),\r\n    totalBusketPrice: getTotalBasketPrice(state),\r\n})\r\n\r\nexport default connect(mapStateToProps)(BasketIcon);","import { useState, useEffect, useContext, useCallback } from \"react\";\r\n\r\nimport useFetch from \"../hook-fetch\";\r\nimport { CurrentUserContext } from \"../../context/current-user-context\";\r\nconst UseAuth = () => {\r\n  const [, setCurrentUserState] = useContext<any>(CurrentUserContext);\r\n  const { response, error, doFetch, clearError } = useFetch();\r\n  const [ready, setReady] = useState(false);\r\n\r\n  const [isAuth, setIsAuth] = useState(false);\r\n\r\n  const logout = useCallback(() => {\r\n    setCurrentUserState({\r\n        isLoading: false,\r\n        isLoggedIn: null,\r\n        currentUser: null\r\n    })\r\n\r\n    localStorage.removeItem('token');\r\n  }, [setCurrentUserState]);\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem('token')) {\r\n      setCurrentUserState((state: any) => ({\r\n        ...state,\r\n        isLoading: false,\r\n        isLoggedIn: false\r\n      }));\r\n\r\n      setReady(true);\r\n      return;\r\n    }\r\n\r\n    doFetch('/api/auth/check');\r\n    setCurrentUserState((state: any) => ({\r\n      ...state,\r\n      isLoading: true\r\n    }));\r\n  }, [doFetch, setCurrentUserState]);\r\n\r\n  useEffect(() => {\r\n    if (!error) {\r\n      return;\r\n    }\r\n\r\n\r\n    setCurrentUserState((state: any) => ({\r\n      ...state,\r\n      isLoggedIn: false,\r\n      isLoading: false,\r\n      currentUser: null\r\n    }));\r\n    setReady(true);\r\n    localStorage.removeItem('token');\r\n    clearError();\r\n  }, [error, clearError, setCurrentUserState]);\r\n\r\n  useEffect(() => {\r\n    if (!response) {\r\n      return;\r\n    }\r\n\r\n    setCurrentUserState((state: any) => ({\r\n      ...state,\r\n      isLoggedIn: true,\r\n      isLoading: false,\r\n      currentUser: response.user\r\n    }));\r\n    setReady(true);\r\n    setIsAuth(true);\r\n  }, [response, setCurrentUserState]);\r\n\r\n  return { ready, isAuth, logout };\r\n};\r\n\r\nexport default UseAuth;","import React, { useContext } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport BasketIcon from '../basket-icon';\r\nimport UseAuth from '../../hooks/use-auth'\r\nimport { CurrentUserContext } from '../../context/current-user-context'\r\nimport './navbar.css';\r\n\r\nconst NavBar = () => {\r\n    const history = useHistory();\r\n    const { logout } = UseAuth();\r\n    const [currentUserState] = useContext<any>(CurrentUserContext);\r\n\r\n    const logoutHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n\r\n        logout();\r\n\r\n        history.push(\"/\");\r\n    };\r\n\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\" >\r\n            <NavLink to=\"/\" exact className=\"navbar-brand  mr-auto\">\r\n                Pizzaaa\r\n            </NavLink>\r\n            {!currentUserState.isLoading && (\r\n                <div className=\"\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/\" exact className=\"nav-link\">\r\n                                Меню\r\n                        </NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/basket\" exact className=\"nav-link\">\r\n                                Корзина\r\n                        </NavLink>\r\n                        </li>\r\n                        {!currentUserState.isLoggedIn && (\r\n                            <>\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink to=\"/login\" className=\"nav-link\">\r\n                                        Войти\r\n                            </NavLink>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink to=\"/registration\" exact className=\"nav-link\">\r\n                                        Зарегестрироваться\r\n                            </NavLink>\r\n                                </li>\r\n                            </>\r\n                        )}\r\n                        {currentUserState.isLoggedIn && (\r\n                            <>\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink to=\"/history\" exact className=\"nav-link\">\r\n                                        История\r\n                            </NavLink>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <button className=\"nav-link nav-link-button\" onClick={logoutHandler}>\r\n                                        Выйти\r\n                            </button>\r\n                                </li>\r\n                            </>\r\n                        )}\r\n                        <li className=\"nav-item\">\r\n                            <BasketIcon />\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )}\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React, { FC } from 'react';\r\nimport Navbar from '../navbar';\r\nimport useAuth from '../../hooks/use-auth'\r\n\r\nconst Layout: FC = ({ children }) => {\r\n    const { ready } = useAuth();\r\n\r\n    if (!ready)\r\n        return (\r\n            <div className=\"spinner-block\">\r\n                <div className=\"spinner-border text-primary\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div className=\"container\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Layout;","import {useEffect, useContext} from 'react'\r\nimport useFetch from '../../hooks/hook-fetch'\r\nimport {CurrentUserContext} from '../../context/current-user-context'\r\n\r\nconst CurrentUserChecker = ({ children }:any) => {\r\n    const [, setCurrentUserState] = useContext<any>(CurrentUserContext)\r\n    const {doFetch, response } = useFetch()\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('token')) {\r\n            setCurrentUserState((state: any) => ({\r\n                ...state,\r\n                isLoggedIn: false\r\n            }))\r\n            return\r\n        }\r\n\r\n        doFetch('/api/auth/check')\r\n        setCurrentUserState((state: any) => ({\r\n            ...state,\r\n            isLoading: true\r\n        }))\r\n    }, [doFetch, setCurrentUserState])\r\n\r\n    useEffect(() => {\r\n        if (!response) {\r\n            return\r\n        }\r\n        \r\n        localStorage.setItem('token', response.user.token);\r\n\r\n        setCurrentUserState((state: any) => ({\r\n            ...state,\r\n            isLoggedIn: true,\r\n            isLoading: false,\r\n            currentUser: response.user\r\n        }))\r\n\r\n    }, [response, setCurrentUserState])\r\n    return children\r\n}\r\n\r\nexport default CurrentUserChecker","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Routes from './routes';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport Layout from './components/layout'\nimport { CurrentUserProvider } from './context/current-user-context'\nimport CurrentUserChecker from './components/current-user-cheker'\n\n\nconst App: any = () => {\n  return (\n    <CurrentUserChecker>\n      <CurrentUserProvider>\n        <Provider store={store}>\n          <Router>\n            <Layout>\n              <Routes />\n            </Layout>\n          </Router>\n        </Provider>\n      </CurrentUserProvider>\n    </CurrentUserChecker>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}